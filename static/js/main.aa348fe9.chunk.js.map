{"version":3,"sources":["utils/Environment.ts","utils/NodeHelper.ts","hooks/web3Context.jsx","assets/images/Peace_sign.svg","slices/AppSlice.ts","slices/AccountSlice.ts","slices/PendingTxnsSlice.ts","utils/index.js","views/404/NotFound.jsx","utils/QueryParameterHelper.ts","components/Loading/LoadingSplash.jsx","App.jsx","i18n.js","store.ts","Root.jsx","index.js","constants.ts"],"names":["EnvHelper","env","REACT_APP_SEGMENT_API_KEY","envVariable","length","ALCHEMY_ID_LIST","REACT_APP_ALCHEMY_IDS","isNotEmpty","split","whitespaceRegex","map","alchemyID","INFURA_ID_LIST","REACT_APP_INFURA_IDS","RegExp","infuraID","REACT_APP_PUBLIC_NODE_1","REACT_APP_PUBLIC_NODE_2","REACT_APP_PUBLIC_NODE_3","REACT_APP_PUBLIC_NODE_4","REACT_APP_PUBLIC_NODE_5","REACT_APP_PUBLIC_NODE_6","REACT_APP_PUBLIC_NODE_7","ALL_URIs","getSelfHostedNode","push","apiKey","REACT_APP_GEOAPIFY_API_KEY","console","warn","process","alchemyTestnetURI","REACT_APP_TESTNET_ALCHEMY","NodeHelper","getFallbackURIs","Object","keys","currentRemovedNodes","getAPIUris","_storage","removeItem","_invalidNodesKey","currentStats","failedAt","Date","getTime","failedConnectionCount","lastFailedConnectionAt","minutesAgo","_failedConnectionsMinutesLimit","providerKey","providerUrl","currentRemovedNodesObj","includes","setItem","JSON","stringify","_emptyInvalidNodesList","currentConnectionStats","parse","getItem","_updateConnectionStatsForProvider","_maxFailedConnections","_removeNodeFromProviders","window","sessionStorage","currentRemovedNodesURIs","getNodesUris","allURIs","invalidNodes","filter","item","checkAllNodesStatus","a","Promise","all","URI","checkNodeStatus","workingUrl","url","fetch","method","mode","headers","body","params","id","jsonrpc","resp","status","logBadConnectionWithTimer","liveURL","makeToast","_msg","_icon","_duration","toast","t","className","role","tabIndex","onClick","dismiss","onKeyDown","style","float","marginLeft","icon","duration","getMainnetURI","lodash_URIS","sample","Web3Context","React","createContext","useWeb3Context","web3Context","useContext","Error","onChainProvider","useMemo","useAddress","address","Web3ContextProvider","children","useState","connected","setConnected","parseInt","chainID","setChainID","setAddress","StaticJsonRpcProvider","provider","setProvider","Web3Modal","network","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","web3Modal","hasCachedProvider","cachedProvider","_initListeners","useCallback","rawProvider","on","accounts","setTimeout","location","reload","chain","_checkNetwork","disconnect","_newNetwork","oldNetwork","otherChainID","connect","connectedProvider","Web3Provider","getNetwork","then","chainId","getSigner","getAddress","connectedAddress","info","clearCachedProvider","useEffect","asyncNode","Provider","value","_g","_excluded","_extends","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgPeaceSign","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","fill","stroke","strokeWidth","cx","cy","r","d","ForwardRef","loadAppDetails","createAsyncThunk","networkID","IdoContract","ethers","Contract","addresses","Ido_ADDRESS","idoABI","stringTrim","utils","minAmount","formatUnits","maxAmount","salePrice","String","startTimestamp","endTimestamp","getFullReleaseTimestamp","FullReleaseTimestamp","toTalAmount","sellAmount","balanceAddress","IdoMaticBalance","isTimeEnd","Number","Leap_Of_Faith","diceContract","Dice_ADDRESS","diceABI","sharesDiceAll","FullRelease","ProfitRelease","incomeProfit","outcomeProfit","Exodus","SatanDevil","appSlice","createSlice","name","initialState","loading","appDetails","reducers","fetchAppSuccess","state","action","setAll","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","error","actions","loadAccountDetails","userMaticBalance","boughtACreed","whiteListed","aCreesContract","ACreed_ADDRESS","ierc20","balanceOf","userACreedBalance","allowance","approveACreed_to_Dice","sharesDice","userSharesDice","accountSlice","accountDetails","fetchAccountSuccess","pendingTxnsSlice","fetchPendingTxns","clearPendingTxn","find","x","txnHash","splice","isPendingTxn","pendingTransactions","type","txnButtonText","defaultText","properties","forEach","get_Polygon_Main_PriorityFee","axios","get","result","data","numberStrToBigNumber","val","decimals","BigNumber","multipliedBy","pow","toFixed","now","str","precision","array","toString","poppedNumber","pop","substring","trimmedNumber","join","shorten","slice","addTokenToWallet","tokenAddress","symbol","image","ethereum","request","e","calTime","seconds","Math","floor","h","m","s","day","hour","minutes","NotFound","useTranslation","display","flexDirection","justifyContent","alignItems","sx","zIndex","theme","drawer","width","height","backgroundColor","Avatar","component","LogoIcon","margin","Typography","Link","NavLink","to","underline","color","sessionStorageKey","LoadingSplash","Home","lazy","Ido","App","dispatch","useDispatch","walletChecked","setWalletChecked","isLoad","setIsLoad","loadApp","loadProvider","loadAccount","loadDetails","whichDetails","safeConnectMetaMask","code","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","iconUrls","href","hrefParameters","parsedParameters","queryString","debug","storeQueryParameters","Box","CssBaseline","fallback","Backdrop","open","backdropFilter","exact","path","localLanguage","localStorage","resources","en","translation","zh","ru","fr","i18n","use","LanguageDetector","initReactI18next","init","supportedLngs","lng","fallbackLng","keySeparator","interpolation","escapeValue","store","configureStore","reducer","pendingTransactionsReducer","app","appReducer","account","accountReducer","Root","basename","Component","ReactDOM","render","document","getElementById"],"mappings":"kXAMaA,EAAb,kGAYE,WACE,OAAOA,EAAUC,IAAIC,4BAbzB,wBAgBE,SAAkBC,GAChB,OAAIA,EAAYC,OAAS,KAjB7B,kCA4BE,WACE,IAAIC,EAeJ,OAJEA,GAPAA,EADEL,EAAUC,IAAIK,uBAAyBN,EAAUO,WAAWP,EAAUC,IAAIK,uBAC1DN,EAAUC,IAAIK,sBAAsBE,MAAMR,EAAUS,iBAEpD,IAIAL,OAAS,EACTC,EAAgBK,KAAI,SAAAC,GAAS,qDAA4CA,MAEzE,KA1CxB,6BAmDE,WACE,IAAIC,EAeJ,OAJEA,GAPAA,EADEZ,EAAUC,IAAIY,sBAAwBb,EAAUO,WAAWP,EAAUC,IAAIY,sBAC1Db,EAAUC,IAAIY,qBAAqBL,MAAM,IAAIM,OAAOd,EAAUS,kBAE9D,IAIAL,OAAS,EACTQ,EAAeF,KAAI,SAAAK,GAAQ,6CAAoCA,MAE/D,KAjEvB,+BA4EE,WAmBE,MAVa,CACCf,EAAUC,IAAIe,wBAA0BhB,EAAUC,IAAIe,wBAA0B,2BAChFhB,EAAUC,IAAIgB,wBAA0BjB,EAAUC,IAAIgB,wBAA0B,+BAChFjB,EAAUC,IAAIiB,wBAA0BlB,EAAUC,IAAIiB,wBAA0B,2BAChFlB,EAAUC,IAAIkB,wBAA0BnB,EAAUC,IAAIkB,wBAA0B,+BAChFnB,EAAUC,IAAImB,wBAA0BpB,EAAUC,IAAImB,wBAA0B,2BAChFpB,EAAUC,IAAIoB,wBAA0BrB,EAAUC,IAAIoB,wBAA0B,+BAChFrB,EAAUC,IAAIqB,wBAA0BtB,EAAUC,IAAIqB,wBAA0B,kDA5FlG,wBAuGE,WACE,IAAIC,EAAWvB,EAAUwB,oBASzB,OAPwB,IAApBD,EAASnB,SAGXmB,EAASE,KAAK,gCACdF,EAASE,KAAK,6BAGTF,IAjHX,6BAoHE,WAGE,MADiB,CAAC,+EAtHtB,+BA0HE,WACE,IAAIG,EAAS1B,EAAUC,IAAI0B,2BAC3B,OAAKD,IACHE,QAAQC,KAAK,2DACN,UA9Hb,KAAa7B,EAIJC,IAAM6B,guBAJF9B,EAKJ+B,kB,+CAA4D/B,EAAUC,IAAI+B,2BALtEhC,EAMJS,gBAAkB,MCEpB,IAAMwB,EAAb,2GAmBE,WAG2C,IAAvCjC,EAAUkC,kBAAkB9B,QAC5B+B,OAAOC,KAAKH,EAAWI,qBAAqBjC,SAAWJ,EAAUsC,aAAalC,QAE9E6B,EAAWM,SAASC,WAAWP,EAAWQ,oBAzBhD,+CA6BE,SAAyCC,GACvC,IAAMC,GAAW,IAAIC,MAAOC,UACtBC,EAAwBJ,EAAaI,uBAAyB,EAgBpE,OAVEJ,EAJAI,EAAwB,GACxBJ,EAAaK,uBAAyBC,YAAWf,EAAWgB,gCAG7C,CACbF,uBAAwBJ,EACxBG,sBAAuBA,EAAwB,GAGlC,CACbC,uBAAwBJ,EACxBG,sBAAuB,KA5C/B,sCAkDE,SAAgCI,EAAqBC,GAGnD,IAAIC,EAAyBnB,EAAWI,oBACpCF,OAAOC,KAAKgB,GAAwBC,SAASF,KAI/CC,EAAuBD,IAAe,IAAIP,MAAOC,UACjDZ,EAAWM,SAASe,QAAQrB,EAAWQ,iBAAkBc,KAAKC,UAAUJ,IAExEnB,EAAWM,SAASC,WAAWU,IAIjCjB,EAAWwB,2BAjEf,uCAyEE,SAAiCN,GAC/B,IAAMD,EAAsB,eAAiBC,EAEzCO,EAAyBH,KAAKI,MAAM1B,EAAWM,SAASqB,QAAQV,IAAgB,OACpFQ,EAAyBzB,EAAW4B,kCAAkCH,IAE3CZ,sBAAwBb,EAAW6B,sBAE5D7B,EAAW8B,yBAAyBb,EAAaC,GAEjDlB,EAAWM,SAASe,QAAQJ,EAAaK,KAAKC,UAAUE,QAnF9D,KAAazB,EACJQ,iBAAmB,eADfR,EAEJ6B,sBAAwB,EAFpB7B,EAOJgB,+BAAiC,GAP7BhB,EAUJM,SAAWyB,OAAOC,eAVdhC,EAYJI,oBAAsBkB,KAAKI,MAAM1B,EAAWM,SAASqB,QAAQ3B,EAAWQ,mBAAqB,MAZzFR,EAaJiC,wBAA0B/B,OAAOC,KAAKH,EAAWI,qBAb7CJ,EA0FJkC,aAAe,WACpB,IAAIC,EAAUpE,EAAUsC,aAGpB+B,EAAepC,EAAWiC,wBAmB9B,OANuB,KARvBE,EAAUA,EAAQE,QAAO,SAAAC,GAAI,OAAKF,EAAahB,SAASkB,OAQ5CnE,SAGVgE,EAAUpE,EAAUkC,mBAGfkC,GAjHEnC,EA0HJuC,oB,sBAAsB,sBAAAC,EAAA,sEACdC,QAAQC,IAEjB3E,EAAUsC,aAAa5B,IAAvB,uCAA2B,WAAMkE,GAAN,eAAAH,EAAA,0DACxBG,EADwB,gCAEF3C,EAAW4C,gBAAgBD,GAFzB,cAErBE,EAFqB,yBAGlBA,GAHkB,2CAA3B,wDAHuB,mFA1HlB7C,EA0IJ4C,gB,uCAAkB,WAAOE,GAAP,iBAAAN,EAAA,+EAGJO,MAAMD,EAAK,CAC1BE,OAAQ,OACRC,KAAM,OACNC,QAAS,CACP,eAAgB,oBAMlBC,KAAM7B,KAAKC,UAAU,CAAEyB,OAAQ,cAAeI,OAAQ,GAAIC,GAAI,GAAIC,QAAS,UAbxD,QAGjBC,EAHiB,QAgBZC,QAAU,KAEjBxD,EAAWyD,0BAA0BF,EAAKT,KAC1CY,GAAU,GAIVA,EAAUZ,EAvBS,gDA2BrB9C,EAAWyD,0BAA0BX,GACrCY,GAAU,EA5BW,iCA8BhBA,GA9BgB,yD,kECjJ3B,SAASC,IAAoD,IAA1CC,EAAyC,uDAAlC,GAAIC,EAA8B,uDAAtB,GAAIC,EAAkB,uDAAN,IACpD,OAAOC,aACL,SAAAC,GAAC,OACC,uBACEC,UAAU,QACVC,KAAK,SACLC,SAAU,EACVC,QAAS,kBAAML,IAAMM,QAAQL,EAAEX,KAC/BiB,UAAW,kBAAMP,IAAMM,QAAQL,EAAEX,KALnC,UAOGO,EACD,sBAAMW,MAAO,CAAEC,MAAO,QAASC,WAAY,QAA3C,yBAGJ,CACEC,KAAMb,EACNc,SAAUb,IAMhB,SAASc,IACP,IAAMtF,EAAWU,EAAWkC,eACtB2C,EAAcC,IAAOxF,GAG3B,OAFAK,QAAQC,KAAKiF,GAENA,GAA4B,2BAGrC,IAAME,EAAcC,IAAMC,cAAc,MAE3BC,EAAiB,WAC5B,IAAMC,EAAcC,qBAAWL,GAC/B,IAAKI,EACH,MAAM,IAAIE,MACR,6GAGJ,IAAQC,EAAoBH,EAApBG,gBACR,OAAOC,mBAAQ,WACb,OAAO,eAAKD,KACX,CAACH,KAGOK,EAAa,WAExB,OADoBN,IAAZO,SAIGC,EAAsB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpC,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,mBAASG,SAASlG,MAAiC,KAAjF,mBAAOmG,EAAP,KAAgBC,EAAhB,KACA,EAA8BL,mBAAS,IAAvC,mBAAOH,EAAP,KAAgBS,EAAhB,KAEA,EAAgCN,mBAAS,IAAIO,IAAsBtG,6BAAnE,mBAAOuG,EAAP,KAAiBC,EAAjB,KACA,EAAkCT,mBAChC,IAAIU,IAAU,CACZC,QAAS,UACTC,eAAe,EACfC,gBAAiB,CACfC,cAAe,CACbC,QAASC,IACTC,QAAS,CACPC,IAAK,CACH,IAAKlC,WATjB,mBAAOmC,EAAP,KAkBMC,GAlBN,KAkB0B,WACxB,QAAKD,KACAA,EAAUE,iBAIXC,EAAiBC,uBACrB,SAAAC,GACOA,EAAYC,KAGjBD,EAAYC,GAAG,kBAAf,uCAAkC,WAAOC,GAAP,SAAA9E,EAAA,sDAChC+E,YAAW,kBAAMxF,OAAOyF,SAASC,WAAU,GADX,2CAAlC,uDAIAL,EAAYC,GAAG,eAAf,uCAA+B,WAAOK,GAAP,SAAAlF,EAAA,sDAC7BmF,EAAcD,GACd/H,QAAQC,KAAK,iCACbgI,IAEAL,YAAW,kBAAMxF,OAAOyF,SAASC,WAAU,GALd,2CAA/B,uDAQAL,EAAYC,GAAG,WAAW,SAACQ,EAAaC,GACjCA,GACLP,YAAW,kBAAMxF,OAAOyF,SAASC,WAAU,SAG/C,CAACrB,IAGGuB,EAAgB,SAACI,GACrB,OAAI/B,IAAY+B,GACVA,IAAiBhC,SAASlG,MAAiC,MAC7DoG,EAAW8B,IACJ,IAOPC,EAAUb,sBAAW,sBAAC,kCAAA3E,EAAA,sEACAuE,EAAUiB,UADV,cACpBZ,EADoB,OAE1BF,EAAeE,GAETa,EAAoB,IAAIC,IAAad,EAAa,OAJ9B,SAMJa,EAAkBE,aAAaC,MAAK,SAAA7B,GAAO,OAAIA,EAAQ8B,WANnD,cAMpBA,EANoB,iBAOKJ,EAAkBK,YAAYC,aAPnC,WAOpBC,EAPoB,OAQLb,EAAcU,GART,wBAUxB1E,EAAU,qDAAD,OAAsD9D,OAAmC,eAAM,KAVhF,kCAa1BqG,EAAWsC,GACXnC,EAAY4B,GAEZnC,GAAa,GAhBa,kBAkBnBmC,GAlBmB,4CAmBzB,CAAC7B,EAAUW,EAAWlB,IAEnB+B,EAAaT,sBAAW,sBAAC,sBAAA3E,EAAA,sDAC7B7C,QAAQ8I,KAAK,iBAEbvC,EAAW,IACXa,EAAU2B,sBACV5C,GAAa,GAEbyB,YAAW,kBAAMxF,OAAOyF,SAASC,WAAU,GAPd,2CAQ5B,CAACrB,EAAUW,EAAWlB,IAUnBP,EAAkBC,mBACtB,iBAAO,CAAEyC,UAASJ,aAAYZ,oBAAmBZ,WAAUP,YAAWJ,UAASO,UAASe,eACxF,CAACiB,EAASJ,EAAYZ,EAAmBZ,EAAUP,EAAWJ,EAASO,EAASe,IAclF,OAXA4B,qBAAU,WAGR,IAAMC,EAAS,uCAAG,sBAAApG,EAAA,sEACVxC,EAAWuC,sBADD,2CAAH,qDAGfqG,IACI5B,KAAuBgB,IAAUI,SAElC,IAEE,cAACrD,EAAY8D,SAAb,CAAsBC,MAAO,CAAExD,mBAA/B,SAAmDK,M,iCClL5D,sCAAIoD,EAAJ,OAEIC,EAAY,CAAC,QAAS,WAE1B,SAASC,IAA2Q,OAA9PA,EAAW/I,OAAOgJ,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUlL,OAAQiL,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIG,KAAOD,EAAcpJ,OAAOsJ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQJ,EAAOI,GAAOD,EAAOC,IAAY,OAAOJ,GAAkBF,EAASU,MAAMC,KAAMP,WAEhT,SAASQ,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKH,EAAnED,EAEzF,SAAuCG,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKH,EAA5DD,EAAS,GAAQY,EAAa7J,OAAOC,KAAKmJ,GAAqB,IAAKF,EAAI,EAAGA,EAAIW,EAAW5L,OAAQiL,IAAOG,EAAMQ,EAAWX,GAAQU,EAASE,QAAQT,IAAQ,IAAaJ,EAAOI,GAAOD,EAAOC,IAAQ,OAAOJ,EAFxMc,CAA8BX,EAAQQ,GAAuB,GAAI5J,OAAOgK,sBAAuB,CAAE,IAAIC,EAAmBjK,OAAOgK,sBAAsBZ,GAAS,IAAKF,EAAI,EAAGA,EAAIe,EAAiBhM,OAAQiL,IAAOG,EAAMY,EAAiBf,GAAQU,EAASE,QAAQT,IAAQ,GAAkBrJ,OAAOsJ,UAAUY,qBAAqBV,KAAKJ,EAAQC,KAAgBJ,EAAOI,GAAOD,EAAOC,IAAU,OAAOJ,EAMne,SAASkB,EAAaC,EAAMC,GAC1B,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQb,EAAyBS,EAAMtB,GAE3C,OAAoB,gBAAoB,MAAOC,EAAS,CACtD0B,MAAO,6BACPC,QAAS,cACTC,IAAKN,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DnH,GAAIoH,GACHD,GAAS,KAAMzB,IAAOA,EAAkB,gBAAoB,IAAK,CAClE+B,KAAM,YACNC,OAAQ,OACRC,YAAa,IACC,gBAAoB,SAAU,CAC5CC,GAAI,IACJC,GAAI,IACJC,EAAG,MACY,gBAAoB,OAAQ,CAC3CC,EAAG,qDAIP,IAAIC,EAA0B,aAAiBhB,GAChC,K,iJCRFiB,EAAiBC,YAC5B,qBAD4C,uCAE5C,uEAAA/I,EAAA,6DAASgJ,EAAT,EAASA,UAAWpF,EAApB,EAAoBA,SACZqF,EAAc,IAAIC,IAAOC,SAASC,IAAUJ,GAAWK,YAAaC,IAAQ1F,GADpF,KAGoB2F,IAHpB,KAG+BL,IAAOM,MAHtC,SAG8DP,EAAYQ,YAH1E,oCAG4CC,YAH5C,eAGsF,SAA9ED,GAHR,aAG+F,GAH/F,KAIoBF,IAJpB,KAI+BL,IAAOM,MAJtC,UAI8DP,EAAYU,YAJ1E,qCAI4CD,YAJ5C,eAIsF,SAA9EC,GAJR,aAI+F,GAJ/F,KAKoBJ,IALpB,KAK+BL,IAAOM,MALtC,UAK8DP,EAAYW,YAL1E,uCAK4CF,YAL5C,gBAKsF,SAA9EE,GALR,cAK+F,GAL/F,MAMyBC,OANzB,UAMuCZ,EAAYa,iBANnD,4BAMQA,GANR,sBAOuBD,OAPvB,UAOqCZ,EAAYc,eAPjD,4BAOQA,GAPR,sBAQ+BF,OAR/B,UAQ6CZ,EAAYe,0BARzD,4BAQQC,GARR,sBASsBV,IATtB,MASiCL,IAAOM,MATxC,UASiEP,EAAYiB,cAT7E,wCAS8CR,YAT9C,iBAS2F,SAAnFQ,GATR,eASoG,GATpG,MAUqBX,IAVrB,MAUgCL,IAAOM,MAVvC,UAUgEP,EAAYkB,aAV5E,wCAU6CT,YAV7C,iBAUyF,SAAjFS,GAVR,eAUkG,GAVlG,MAW0BZ,IAX1B,MAWqCL,IAAOM,MAX5C,UAYUP,EAAYmB,eAAehB,IAAUJ,GAAWK,aAZ1D,wCAWkDK,YAXlD,iBAYuE,SAD/DW,GAXR,eAYgF,GAZhF,UAa4BpB,EAAYqB,YAbxC,eAaQA,EAbR,aAc0BC,OAd1B,UAcuCtB,EAAYuB,gBAdnD,4BAcQA,GAdR,gBAiBQC,EAAe,IAAIvB,IAAOC,SAASC,IAAUJ,GAAW0B,aAAcC,IAAS/G,GAjBvF,MAmBwB2F,IAnBxB,MAmBmCL,IAAOM,MAnB1C,UAmBmEiB,EAAaG,gBAnBhF,wCAmBgDlB,YAnBhD,iBAmBgG,SAAxFkB,GAnBR,eAmByG,GAnBzG,MAoBsBrB,IApBtB,MAoBiCL,IAAOM,MApBxC,UAoBiEiB,EAAaI,cApB9E,wCAoB8CnB,YApB9C,iBAoB4F,SAApFmB,GApBR,eAoBqG,GApBrG,MAqBwBtB,IArBxB,MAqBmCL,IAAOM,MArB1C,UAqBmEiB,EAAaK,gBArBhF,wCAqBgDpB,YArBhD,iBAqBgG,SAAxFoB,GArBR,eAqByG,GArBzG,MAsBuBvB,IAtBvB,MAsBkCL,IAAOM,MAtBzC,UAsBkEiB,EAAaM,eAtB/E,wCAsB+CrB,YAtB/C,iBAsB8F,SAAtFqB,GAtBR,eAsBuG,GAtBvG,MAuBwBxB,IAvBxB,MAuBmCL,IAAOM,MAvB1C,WAuBmEiB,EAAaO,gBAvBhF,yCAuBgDtB,YAvBhD,iBAuBgG,SAAxFsB,GAvBR,eAuByG,GAvBzG,MAwBiBzB,IAxBjB,MAwB4BL,IAAOM,MAxBnC,WAwB4DiB,EAAaQ,SAxBzE,yCAwByCvB,YAxBzC,iBAwBkF,SAA1EuB,GAxBR,eAwB2F,GAxB3F,MAyBqBV,OAzBrB,WAyBkCE,EAAaS,aAzB/C,6BAyBQA,GAzBR,kCA4BS,CACLzB,YACAE,YACAC,YACAE,iBACAC,eACAE,uBACAC,cACAC,aACAE,kBACAC,YACAE,gBAEAI,gBACAC,cACAC,gBACAC,eACAC,gBACAC,SACAC,eA/CJ,6CAF4C,uDAgExCC,EAAWC,YAAY,CAC3BC,KAAM,MACNC,aAP8B,CAC9BC,SAAS,EACTC,WAAY,IAMZC,SAAU,CACRC,gBADQ,SACQC,EAAOC,GACrBC,YAAOF,EAAOC,EAAOE,WAGzBC,cAAe,SAAAC,GACbA,EACGC,QAAQnD,EAAeoD,SAAS,SAAAP,OAGhCM,QAAQnD,EAAeqD,WAAW,SAACR,EAAOC,GAEzCC,YAAOF,EAAMH,WAAYI,EAAOE,SAChCH,EAAMJ,SAAU,KAEjBU,QAAQnD,EAAesD,UAAU,SAACT,EAAD,GAAuB,IAAbU,EAAY,EAAZA,MAC1ClP,QAAQC,KAAKiP,GACbV,EAAMJ,SAAU,QAOTJ,MAAf,QAEmCA,EAASmB,QAA7BZ,iB,0JCtGFa,EAAqBxD,YAChC,6BADgD,uCAEhD,mDAAA/I,EAAA,6DAASgJ,EAAT,EAASA,UAAWpF,EAApB,EAAoBA,SAAUX,EAA9B,EAA8BA,QAEtBgG,EAAc,IAAIC,IAAOC,SAASC,IAAUJ,GAAWK,YAAaC,IAAQ1F,GAFpF,KAI2B2F,IAJ3B,KAIsCL,IAAOM,MAJ7C,SAIsEP,EAAYmB,eAAenH,GAJjG,oCAImDyG,YAJnD,eAI2G,SAAnG8C,GAJR,aAIoH,GAJpH,UAK6BvD,EAAYwD,aAAaxJ,GALtD,eAKQwJ,EALR,iBAM4BxD,EAAYyD,YAAYzJ,GANpD,eAMQyJ,EANR,OAQQC,EAAiB,IAAIzD,IAAOC,SAASC,IAAUJ,GAAW4D,eAAgBC,IAAQjJ,GAR1F,KAS4B2F,IAT5B,KASuCL,IAAOM,MAT9C,UASuEmD,EAAeG,UAAU7J,GAThG,qCASoDyG,YATpD,eAS0G,SAAlGqD,GATR,aASmH,GATnH,KAUgCxD,IAVhC,KAU2CL,IAAOM,MAVlD,UAWUmD,EAAeK,UAAU/J,EAASmG,IAAUJ,GAAW0B,cAXjE,uCAUwDhB,YAVxD,gBAWgF,SADxEuD,GAVR,cAWyF,GAEjFxC,EAAe,IAAIvB,IAAOC,SAASC,IAAUJ,GAAW0B,aAAcC,IAAS/G,GAbvF,MAcyB2F,IAdzB,MAcoCL,IAAOM,MAd3C,UAcoEiB,EAAayC,WAAWjK,GAd5F,wCAciDyG,YAdjD,iBAcsG,SAA9FyD,GAdR,eAc+G,GAd/G,kBAgBS,CAEHX,mBACAO,oBACAE,wBACAR,eACAC,cACAS,mBAvBN,4CAFgD,uDA4C5CC,EAAehC,YAAY,CAC/BC,KAAM,UACNC,aARkC,CAClCC,SAAS,EACT8B,eAAgB,IAOhB5B,SAAU,CACR6B,oBADQ,SACY3B,EAAOC,GACzBC,YAAOF,EAAOC,EAAOE,WAGzBC,cAAe,SAAAC,GACbA,EACGC,QAAQM,EAAmBL,SAAS,SAAAP,OAGpCM,QAAQM,EAAmBJ,WAAW,SAACR,EAAOC,GAC7CC,YAAOF,EAAM0B,eAAgBzB,EAAOE,SACpCH,EAAMJ,SAAU,KAEjBU,QAAQM,EAAmBH,UAAU,SAACT,EAAD,GAAuB,IAAbU,EAAY,EAAZA,MAC9ClP,QAAQC,KAAKiP,GACbV,EAAMJ,SAAU,QAMT6B,MAAf,QAEuCA,EAAad,QAArCgB,qB,qlpBC5Ff,oJAUMC,EAAmBnC,YAAY,CACnCC,KAAM,sBACNC,aAJuC,GAKvCG,SAAU,CACR+B,iBADQ,SACS7B,EAAOC,GACtBD,EAAM3O,KAAK4O,EAAOE,UAEpB2B,gBAJQ,SAIQ9B,EAAOC,GACrB,IAAMjF,EAASgF,EAAM+B,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAYhC,EAAOE,WAChDnF,GACFgF,EAAMkC,OAAOlC,EAAMnE,QAAQb,GAAS,OAM/BmH,EAAe,SAACC,EAAoCC,GAC/D,OAAOD,EAAoB9R,KAAI,SAAA0R,GAAC,OAAIA,EAAEK,QAAMpP,SAASoP,IAG1CC,EAAgB,SAACF,EAAoCC,EAAcE,GAC9E,OAAOJ,EAAaC,EAAqBC,GAAQ,aAAeE,GAO3D,EAA8CX,EAAiBjB,QAAvDkB,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,gBAElBF,MAAf,S,sXCrCO,SAAS1B,EAAOF,EAAOwC,GACZzQ,OAAOC,KAAKwQ,GACpBC,SAAQ,SAAArH,GACZ4E,EAAM5E,GAAOoH,EAAWpH,MAIvB,SAAesH,IAAtB,+B,4CAAO,8BAAArO,EAAA,+EAIWsO,IAAMC,IAAN,uEAJX,OAIFxN,EAJE,OAKFyN,EAASzN,EAAK0N,KAAL,OALP,gDAODtR,QAAQC,KAAK,CAACiP,MAAK,OACnBmC,EAAS,CAAC,aAAe,KAAK,gBAAkB,MAAM,aAAe,OARpE,iCAWIA,GAXJ,0D,sBAcE,IAAME,EAAuB,SAACC,EAAKC,GAExC,OADU,IAAIC,IAAUF,GAAKG,aAAa,IAAID,IAAU,IAAIE,IAAIH,IACvDI,QAAQ,IAOPzQ,EAAa,SAACoP,GACxB,IAAMsB,GAAM,IAAI9Q,MAAOC,UACvB,OAAO,IAAID,KAAK8Q,EAAU,IAAJtB,GAAWvP,WAc9B,SAASmL,EAAW2F,GAAsB,IAAhBC,EAAe,uDAAH,EAEnCC,EAAQF,EAAInT,MAAM,KACxB,GAAqB,IAAjBqT,EAAMzT,OAAc,OAAOuT,EAC/B,GAAkB,IAAdC,EAAiB,OAAOC,EAAM,GAAGC,WAErC,IAAMC,EAAeF,EAAMG,OAAS,IACpCH,EAAMpS,KAAKsS,EAAaE,UAAU,EAAGL,IACrC,IAAMM,EAAgBL,EAAMM,KAAK,KACjC,OAAOD,EAGJ,IAAME,EAAU,SAACT,GACpB,OAAIA,EAAIvT,OAAS,GAAWuT,EACtB,GAAN,OAAUA,EAAIU,MAAM,EAAG,GAAvB,cAA+BV,EAAIU,MAAMV,EAAIvT,OAAS,KAKnD,IA6BMkU,EAAgB,uCAAG,WAAOC,EAAcC,EAAQnB,EAAUoB,GAAvC,SAAAhQ,EAAA,0DACxBT,OAAO0Q,SADiB,yCAGd1Q,OAAO0Q,SAASC,QAAQ,CAC1B1P,OAAQ,oBACRI,OAAQ,CACJoN,KAAM,QACN3J,QAAS,CACLpB,QAAS6M,EACTC,OAAQA,EACRnB,SAAUA,EACVoB,MAAOA,MAXC,sDAgBpB7S,QAAQ8I,KAAK,CAACkK,EAAC,OAhBK,wDAAH,4DAqBhBC,EAAU,SAACC,GACpB,GAAgB,IAAZA,IAAkBA,EAClB,MAAO,GAEX,IAAMzH,EAAI0H,KAAKC,MAAMF,EAAO,OACtBG,EAAIF,KAAKC,MAAOF,EAAO,MAAkB,MACzCI,EAAIH,KAAKC,MAAOF,EAAU,KAAQ,IAClCK,EAAIJ,KAAKC,MAAOF,EAAU,MAAYzH,EAAQ,KAAJ4H,EAAe,GAAJC,GAM3D,MADa,CAAEE,IAJE/H,EAAI,EAAKA,GAAK,GAAKA,EAAI,IAAMA,EAAK,KAIrBgI,KAHbJ,EAAI,EAAKA,GAAK,GAAKA,EAAI,IAAMA,EAAK,KAGLK,QAF7BJ,EAAI,EAAKA,GAAK,GAAKA,EAAI,IAAMA,EAAK,KAEcJ,QADhDK,EAAI,EAAKA,GAAK,GAAKA,EAAI,IAAMA,EAAK,Q,kowEC3HxC,SAASI,IAEtB,IAAQtP,EAAMuP,cAANvP,EAER,OACE,eAAC,IAAD,CAAKwP,QAAQ,OAAOC,cAAc,SAASC,eAAe,SAASC,WAAW,SAC5EC,GAAI,CAAEC,OAAQ,SAACC,GAAD,OAAWA,EAAMD,OAAOE,OAAS,IAAIC,MAAO,QAASC,OAAQ,QAASC,gBAAiB,WADvG,UAGE,cAACC,EAAA,EAAD,CACEC,UAAWC,IACX9P,MAAO,CAAEyP,MAAO,QAASC,OAAQ,SACjChQ,UAAU,KAEZ,eAAC,IAAD,CAAKuP,QAAQ,OAAOE,eAAe,SAASC,WAAW,SAASC,GAAI,CAAEU,OAAQ,QAA9E,UACE,eAACC,EAAA,EAAD,WAAcvQ,EAAE,gBAAhB,kBACA,cAACwQ,EAAA,EAAD,CACEJ,UAAWK,IACXC,GAAG,IACHC,UAAU,SACVC,MAAM,OACN3Q,UAAU,YALZ,kC,sBCnBF4Q,EAAoB,Q,6BC2BXC,MAvBf,WAEE,IAAQ9Q,EAAMuP,cAANvP,EAER,OAEE,eAAC,IAAD,CAAMwP,QAAQ,OAAOC,cAAc,SAASC,eAAe,SAASC,WAAW,SAC/EC,GAAI,CAACC,OAAQ,SAACC,GAAD,OAAWA,EAAMD,OAAOE,OAAS,IAAIC,MAAM,QAASC,OAAO,QAASC,gBAAgB,WADjG,UAKM,cAACC,EAAA,EAAD,CACCC,UAAWC,IACX9P,MAAO,CAACyP,MAAM,QAASC,OAAO,SAC9BhQ,UAAU,uBAEZ,cAACsQ,EAAA,EAAD,CAAYX,GAAI,CAACU,OAAO,QAAxB,SAAkCtQ,EAAE,eCXvC+Q,EAAOC,gBAAK,kBAAM,8DAClBC,EAAMD,gBAAK,kBAAM,8DAiJRE,MA/If,WACE,IAAMC,EAAWC,cACjB,EAAqElQ,cAA7D8C,EAAR,EAAQA,QAAShB,EAAjB,EAAiBA,kBAAmBZ,EAApC,EAAoCA,SAAUJ,EAA9C,EAA8CA,QAASH,EAAvD,EAAuDA,UACjDJ,EAAUD,cAEhB,EAA0CI,oBAAS,GAAnD,mBAAOyP,EAAP,KAAsBC,EAAtB,KACA,EAA4B1P,oBAAS,GAArC,mBAAO2P,EAAP,KAAeC,EAAf,KAEMC,EAAUtO,uBACd,SAAAuO,GACEP,EAAS7J,YAAe,CAAEE,UAAWxF,EAASI,SAAUsP,KACxDF,GAAU,KAEZ,CAAC3P,IAGG8P,EAAcxO,uBAClB,SAAAuO,GACEP,EAASpG,YAAmB,CAAEvD,UAAWxF,EAASI,SAAUsP,EAAcjQ,eAE5E,CAACI,IApBU,SAuBE+P,EAvBF,8EAuBb,WAA2BC,GAA3B,eAAArT,EAAA,sDACMkT,EAAetP,EACE,QAAjByP,GACFJ,EAAQC,GAGW,YAAjBG,GAA8BpQ,GAAWI,GAAa0P,GACxDI,EAAYD,GAPhB,4CAvBa,sBAmCb/M,qBAAU,WAEJ0M,GACFO,EAAY,SAEb,CAACP,IAGJ1M,qBAAU,WAEJ9C,GAAa0P,GACfK,EAAY,aAEb,CAAC/P,EAAW0P,IAGf,IAAMO,EAAmB,uCAAG,sBAAAtT,EAAA,+EAElBiQ,SAASC,QAAQ,CACrB1P,OAAQ,6BACRI,OAAQ,CAAC,CAAEiF,QAAS,WAJE,0DAQC,OAArB,KAAY0N,KARQ,2CAUdtD,SAASC,QAAQ,CACrB1P,OAAQ,0BACRI,OAAQ,CACN,CACEiF,QAAS,OACT2N,UAAW,kBACXC,eAAgB,CACdpI,KAAM,QACN0E,OAAQ,QACRnB,SAAU,IAEZ8E,QAAS,CAAC,4BACVC,kBAAmB,CAAC,4BACpBC,SAAU,CAAC,sFAvBG,0DA6BpBzW,QAAQC,KAAR,MA7BoB,QAiCxBD,QAAQC,KAAR,MAjCwB,yBAoCxBoI,IAAUI,MAAK,WACbkN,GAAiB,MArCK,mFAAH,qDA4DzB,OAjBA3M,qBAAU,WACJ3B,KAMFnB,GAAmBiQ,IAGnBR,GAAiB,GF5GhB,WAEL,GAAKvT,OAAOC,eAAZ,CAQA,IAAKD,OAAOyF,WAAazF,OAAOyF,SAAS6O,KAGvC,OAFA1W,QAAQC,KAAK,yCACbmC,OAAOC,eAAezB,WAAWsU,GASnC,IAAIyB,EAAiBvU,OAAOyF,SAAS6O,KAAK9X,MAAM,KAChD,GAAK+X,GAA2C,GAAzBA,EAAenY,OAAtC,CAIA,IAAIoY,EAAmBC,IAAY9U,MAAM4U,EAAevE,OAAS,IAEjEhQ,OAAOC,eAAeX,QAAQwT,EAAmB2B,IAAYjV,UAAUgV,IACvE5W,QAAQ8W,MAAM,+CAAiDD,IAAYjV,UAAUgV,UA1BnF5W,QAAQC,KAAK,mCE6Gb8W,KACC,IAGD,eAACC,EAAA,EAAD,CAAK1S,UAAU,8BAAf,UACE,cAAC2S,EAAA,EAAD,IAEA,cAAC,WAAD,CACEC,SACE,cAACC,EAAA,EAAD,CACEC,MAAM,EACNnD,GAAI,CAAEC,OAAQ,IAAKmD,eAAgB,cAFrC,SAIE,cAAC,EAAD,MANN,SAUE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAACnC,EAAD,MAGF,cAAC,IAAD,CAAOkC,OAAK,EAACC,KAAK,OAAlB,SACE,cAACjC,EAAD,MAGF,cAAC,IAAD,CAAOb,UAAWd,a,+DCzItB6D,EAAgBC,aAAazV,QAAQ,cAErC0V,EAAY,CACdC,GAAI,CAAEC,YAAaD,GACnBE,GAAI,CAAED,YAAaC,GACnBC,GAAI,CAAEF,YAAaE,GACnBC,GAAI,CAAEH,YAAaG,IAGvBC,IAGEC,IAAIC,KAEJD,IAAIE,KACDC,KAAK,CACFtB,OAAO,EACPuB,cAAe,CAAC,KAAM,KAAM,KAAM,MAClCC,IAAsB,MAAjBd,EAAwB,KAAwB,MAAjBA,EAAwB,KAAwB,MAAjBA,EAAwB,KAAO,KAClGe,YAAa,KACbb,YACAc,cAAc,EACdC,cAAe,CACXC,aAAa,KAIVV,EAAf,EAAeA,I,iBCvBAW,EAXDC,YAAe,CACzBC,QAAS,CACLjI,oBAAqBkI,IACrBC,IAAKC,IACLC,QAASC,OCAIC,E,kDACjB,WAAYpO,GAAQ,uCACVA,G,0CAGV,WACI,OACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAU4N,MAAOA,EAAjB,SACI,cAAC,IAAD,CAAeS,SAAU,KAAzB,SACI,cAAC,EAAD,c,GAVUC,a,OCLlCC,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,gCCR1B,kCACO,IASMxN,EAAwB,CAEnC,IAAK,CACHC,YAAa,6CACbuD,eAAgB,6CAChBlC,aAAc,iD","file":"static/js/main.aa348fe9.chunk.js","sourcesContent":["/**\r\n * Access `process.env` in an environment helper\r\n * Usage: `EnvHelper.env`\r\n * - Other static methods can be added as needed per\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/static\r\n */\r\nexport class EnvHelper {\r\n  /**\r\n   * @returns `process.env`\r\n   */\r\n  static env = process.env;\r\n  static alchemyTestnetURI = `https://eth-rinkeby.alchemyapi.io/v2/${EnvHelper.env.REACT_APP_TESTNET_ALCHEMY}`;\r\n  static whitespaceRegex = /\\s+/;\r\n\r\n  /**\r\n   * Returns env contingent segment api key\r\n   * @returns segment\r\n   */\r\n  static getSegmentKey() {\r\n    return EnvHelper.env.REACT_APP_SEGMENT_API_KEY;\r\n  }\r\n\r\n  static isNotEmpty(envVariable: string) {\r\n    if (envVariable.length > 10) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * in development environment will return the `ethers` community api key so that devs don't need to add elements to their .env\r\n   * @returns Array of Alchemy API URIs or empty set\r\n   */\r\n  static getAlchemyAPIKeyList() {\r\n    let ALCHEMY_ID_LIST: string[];\r\n\r\n    // split the provided API keys on whitespace\r\n    if (EnvHelper.env.REACT_APP_ALCHEMY_IDS && EnvHelper.isNotEmpty(EnvHelper.env.REACT_APP_ALCHEMY_IDS)) {\r\n      ALCHEMY_ID_LIST = EnvHelper.env.REACT_APP_ALCHEMY_IDS.split(EnvHelper.whitespaceRegex);\r\n    } else {\r\n      ALCHEMY_ID_LIST = [];\r\n    }\r\n\r\n    // now add the uri path\r\n    if (ALCHEMY_ID_LIST.length > 0) {\r\n      ALCHEMY_ID_LIST = ALCHEMY_ID_LIST.map(alchemyID => `https://eth-mainnet.alchemyapi.io/v2/${alchemyID}`);\r\n    } else {\r\n      ALCHEMY_ID_LIST = [];\r\n    }\r\n    return ALCHEMY_ID_LIST;\r\n  }\r\n\r\n  /**\r\n   * NOTE(appleseed): Infura IDs are only used as Fallbacks & are not Mandatory\r\n   * @returns {Array} Array of Infura API Ids\r\n   */\r\n  static getInfuraIdList() {\r\n    let INFURA_ID_LIST: string[];\r\n\r\n    // split the provided API keys on whitespace\r\n    if (EnvHelper.env.REACT_APP_INFURA_IDS && EnvHelper.isNotEmpty(EnvHelper.env.REACT_APP_INFURA_IDS)) {\r\n      INFURA_ID_LIST = EnvHelper.env.REACT_APP_INFURA_IDS.split(new RegExp(EnvHelper.whitespaceRegex));\r\n    } else {\r\n      INFURA_ID_LIST = [];\r\n    }\r\n\r\n    // now add the uri path\r\n    if (INFURA_ID_LIST.length > 0) {\r\n      INFURA_ID_LIST = INFURA_ID_LIST.map(infuraID => `https://mainnet.infura.io/v3/${infuraID}`);\r\n    } else {\r\n      INFURA_ID_LIST = [];\r\n    }\r\n    return INFURA_ID_LIST;\r\n  }\r\n\r\n  /**\r\n   * @returns {Array} Array of node url addresses or empty set\r\n   * node url addresses can be whitespace-separated string of \"https\" addresses\r\n   * - functionality for Websocket addresses has been deprecated due to issues with WalletConnect\r\n   *     - WalletConnect Issue: https://github.com/WalletConnect/walletconnect-monorepo/issues/193\r\n   */\r\n  static getSelfHostedNode() {\r\n    let URI_LIST: string[];\r\n    // if (EnvHelper.env.REACT_APP_SELF_HOSTED_NODE && EnvHelper.isNotEmpty(EnvHelper.env.REACT_APP_SELF_HOSTED_NODE)) {\r\n    //   URI_LIST = EnvHelper.env.REACT_APP_SELF_HOSTED_NODE.split(new RegExp(EnvHelper.whitespaceRegex));\r\n    // else {\r\n    //   URI_LIST = [];\r\n    // }\r\n    // return URI_LIST;\r\n    \r\n      URI_LIST = [\r\n                  EnvHelper.env.REACT_APP_PUBLIC_NODE_1 ? EnvHelper.env.REACT_APP_PUBLIC_NODE_1 : 'https://polygon-rpc.com/', \r\n                  EnvHelper.env.REACT_APP_PUBLIC_NODE_2 ? EnvHelper.env.REACT_APP_PUBLIC_NODE_2 : 'https://rpc.ankr.com/polygon', \r\n                  EnvHelper.env.REACT_APP_PUBLIC_NODE_3 ? EnvHelper.env.REACT_APP_PUBLIC_NODE_3 : 'https://polygon-rpc.com/', \r\n                  EnvHelper.env.REACT_APP_PUBLIC_NODE_4 ? EnvHelper.env.REACT_APP_PUBLIC_NODE_4 : 'https://rpc.ankr.com/polygon', \r\n                  EnvHelper.env.REACT_APP_PUBLIC_NODE_5 ? EnvHelper.env.REACT_APP_PUBLIC_NODE_5 : 'https://polygon-rpc.com/', \r\n                  EnvHelper.env.REACT_APP_PUBLIC_NODE_6 ? EnvHelper.env.REACT_APP_PUBLIC_NODE_6 : 'https://rpc.ankr.com/polygon', \r\n                  EnvHelper.env.REACT_APP_PUBLIC_NODE_7 ? EnvHelper.env.REACT_APP_PUBLIC_NODE_7 : 'https://matic-mainnet-full-rpc.bwarelabs.com', \r\n                 ]\r\n    \r\n    return URI_LIST;\r\n  }\r\n\r\n  /**\r\n   * in development will always return the `ethers` community key url even if .env is blank\r\n   * in prod if .env is blank API connections will fail\r\n   * @returns array of API urls\r\n   */\r\n  static getAPIUris() {\r\n    let ALL_URIs = EnvHelper.getSelfHostedNode();\r\n\r\n    if (ALL_URIs.length === 0) {\r\n      // push in the common ethers key in development\r\n      // ALL_URIs.push(\"https://bsc-dataseed1.binance.org/\");\r\n      ALL_URIs.push('https://rpc.ankr.com/polygon');\r\n      ALL_URIs.push('https://polygon-rpc.com/');\r\n    }\r\n\r\n    return ALL_URIs;\r\n  }\r\n\r\n  static getFallbackURIs() {\r\n    // const ALL_URIs = [...EnvHelper.getAlchemyAPIKeyList(), ...EnvHelper.getInfuraIdList()];\r\n    const ALL_URIs = ['https://polygon-mainnet.g.alchemy.com/v2/_MIUg8TjY0-LnfiyPBbyr46h0pc8u24f'];\r\n    return ALL_URIs;\r\n  }\r\n\r\n  static getGeoapifyAPIKey() {\r\n    var apiKey = EnvHelper.env.REACT_APP_GEOAPIFY_API_KEY;\r\n    if (!apiKey) {\r\n      console.warn(\"Missing REACT_APP_GEOAPIFY_API_KEY environment variable\");\r\n      return null;\r\n    }\r\n\r\n    return apiKey;\r\n  }\r\n}\r\n","import { minutesAgo } from \"./index\";\r\nimport { EnvHelper } from \"./Environment\";\r\n\r\ninterface ICurrentStats {\r\n  failedConnectionCount: number;\r\n  lastFailedConnectionAt: number;\r\n}\r\n\r\n/**\r\n * NodeHelper used to parse which nodes are valid / invalid, working / not working\r\n * NodeHelper.currentRemovedNodes is Object representing invalidNodes\r\n * NodeHelper.logBadConnectionWithTimer logs connection stats for Nodes\r\n * NodeHelper.getNodesUris returns an array of valid node uris\r\n */\r\nexport class NodeHelper {\r\n  static _invalidNodesKey = \"invalidNodes\";\r\n  static _maxFailedConnections = 2;\r\n  /**\r\n   * failedConnectionsMinuteLimit is the number of minutes that _maxFailedConnections must occur within\r\n   * for the node to be blocked.\r\n   */\r\n  static _failedConnectionsMinutesLimit = 15;\r\n\r\n  // use sessionStorage so that we don't have to worry about resetting the invalidNodes list\r\n  static _storage = window.sessionStorage;\r\n\r\n  static currentRemovedNodes = JSON.parse(NodeHelper._storage.getItem(NodeHelper._invalidNodesKey) || \"{}\");\r\n  static currentRemovedNodesURIs = Object.keys(NodeHelper.currentRemovedNodes);\r\n\r\n  /**\r\n   * remove the invalidNodes list entirely\r\n   * should be used as a failsafe IF we have invalidated ALL nodes AND we have no fallbacks\r\n   */\r\n  static _emptyInvalidNodesList() {\r\n    // if all nodes are removed && there are no fallbacks, then empty the list\r\n    if (\r\n      EnvHelper.getFallbackURIs().length === 0 &&\r\n      Object.keys(NodeHelper.currentRemovedNodes).length === EnvHelper.getAPIUris().length\r\n    ) {\r\n      NodeHelper._storage.removeItem(NodeHelper._invalidNodesKey);\r\n    }\r\n  }\r\n\r\n  static _updateConnectionStatsForProvider(currentStats: ICurrentStats) {\r\n    const failedAt = new Date().getTime();\r\n    const failedConnectionCount = currentStats.failedConnectionCount || 0;\r\n    if (\r\n      failedConnectionCount > 0 &&\r\n      currentStats.lastFailedConnectionAt > minutesAgo(NodeHelper._failedConnectionsMinutesLimit)\r\n    ) {\r\n      // more than 0 failed connections in the last (15) minutes\r\n      currentStats = {\r\n        lastFailedConnectionAt: failedAt,\r\n        failedConnectionCount: failedConnectionCount + 1,\r\n      };\r\n    } else {\r\n      currentStats = {\r\n        lastFailedConnectionAt: failedAt,\r\n        failedConnectionCount: 1,\r\n      };\r\n    }\r\n    return currentStats;\r\n  }\r\n\r\n  static _removeNodeFromProviders(providerKey: string, providerUrl: string) {\r\n    // get Object of current removed Nodes\r\n    // key = providerUrl, value = removedAt Timestamp\r\n    let currentRemovedNodesObj = NodeHelper.currentRemovedNodes;\r\n    if (Object.keys(currentRemovedNodesObj).includes(providerUrl)) {\r\n      // already on the removed nodes list\r\n    } else {\r\n      // add to list\r\n      currentRemovedNodesObj[providerUrl] = new Date().getTime();\r\n      NodeHelper._storage.setItem(NodeHelper._invalidNodesKey, JSON.stringify(currentRemovedNodesObj));\r\n      // remove connection stats for this Node\r\n      NodeHelper._storage.removeItem(providerKey);\r\n    }\r\n\r\n    // will only empty if no Fallbacks are provided\r\n    NodeHelper._emptyInvalidNodesList();\r\n  }\r\n\r\n  /**\r\n   * adds a bad connection stat to NodeHelper._storage for a given node\r\n   * if greater than `_maxFailedConnections` previous failures in last `_failedConnectionsMinuteLimit` minutes will remove node from list\r\n   * @param provider an Ethers provider\r\n   */\r\n  static logBadConnectionWithTimer(providerUrl: string) {\r\n    const providerKey: string = \"-nodeHelper:\" + providerUrl;\r\n\r\n    let currentConnectionStats = JSON.parse(NodeHelper._storage.getItem(providerKey) || \"{}\");\r\n    currentConnectionStats = NodeHelper._updateConnectionStatsForProvider(currentConnectionStats);\r\n\r\n    if (currentConnectionStats.failedConnectionCount > NodeHelper._maxFailedConnections) {\r\n      // then remove this node from our provider list for 24 hours\r\n      NodeHelper._removeNodeFromProviders(providerKey, providerUrl);\r\n    } else {\r\n      NodeHelper._storage.setItem(providerKey, JSON.stringify(currentConnectionStats));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * returns Array of APIURIs where NOT on invalidNodes list\r\n   */\r\n  static getNodesUris = () => {\r\n    let allURIs = EnvHelper.getAPIUris();\r\n\r\n\r\n    let invalidNodes = NodeHelper.currentRemovedNodesURIs;\r\n    // console.log({invalidNodes});\r\n    \r\n    // filter invalidNodes out of allURIs\r\n    // this allows duplicates in allURIs, removes both if invalid, & allows both if valid\r\n    allURIs = allURIs.filter(item => !invalidNodes.includes(item));\r\n    // allURIs = allURIs.filter(item => { \r\n    //   if(item) { \r\n    //     return !invalidNodes.includes(item);\r\n    //   }\r\n    // });\r\n\r\n    // return the remaining elements\r\n    if (allURIs.length === 0) {\r\n      // the invalidNodes list will be emptied when the user starts a new session\r\n      // In the meantime use the fallbacks\r\n      allURIs = EnvHelper.getFallbackURIs();\r\n    }\r\n    // console.log(allURIs);\r\n    return allURIs;\r\n  };\r\n\r\n  /**\r\n   * iterate through all the nodes we have with a chainId check.\r\n   * - log the failing nodes\r\n   * - _maxFailedConnections fails in < _failedConnectionsMinutesLimit sends the node to the invalidNodes list\r\n   * returns an Array of working mainnet nodes\r\n   */\r\n  static checkAllNodesStatus = async () => {\r\n    return await Promise.all(  \r\n      // NodeHelper.getNodesUris().map(async URI => {\r\n        EnvHelper.getAPIUris().map(async URI => {\r\n        if(URI) { \r\n          let workingUrl = await NodeHelper.checkNodeStatus(URI);\r\n          return workingUrl;\r\n        }\r\n      }),\r\n    );\r\n  };\r\n\r\n  /**\r\n   * 403 errors are not caught by fetch so we check response.status, too\r\n   * this func returns a workingURL string or false;\r\n   */\r\n  static checkNodeStatus = async (url: string) => {\r\n    let liveURL;\r\n    try {\r\n      let resp = await fetch(url, {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        // NOTE (appleseed): are there other basic requests for other chain types (Arbitrum)???\r\n        // https://documenter.getpostman.com/view/4117254/ethereum-json-rpc/RVu7CT5J\r\n        // chainId works... but is net_version lighter-weight?\r\n        // body: JSON.stringify({ method: \"eth_chainId\", params: [], id: 42, jsonrpc: \"2.0\" }),\r\n        body: JSON.stringify({ method: \"net_version\", params: [], id: 67, jsonrpc: \"2.0\" }),\r\n      });\r\n      \r\n      if (resp.status >= 400) {\r\n        // probably 403 or 429 -> no more alchemy capacity\r\n        NodeHelper.logBadConnectionWithTimer(resp.url);\r\n        liveURL = false;\r\n      } else {\r\n        // this is a working node\r\n        // TODO (appleseed) use response object to prioritize it\r\n        liveURL = url;\r\n      }\r\n    } catch {\r\n      // some other type of issue\r\n      NodeHelper.logBadConnectionWithTimer(url);\r\n      liveURL = false;\r\n    }\r\n    return liveURL;\r\n  };\r\n}\r\n","import React, { useState, useContext, useMemo, useCallback, useEffect } from \"react\";\nimport Web3Modal from \"web3modal\";\nimport { StaticJsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport sample from 'lodash/sample'\nimport toast from \"react-hot-toast\";\nimport { NodeHelper } from \"../utils/NodeHelper\";\nfunction makeToast(_msg = \"\", _icon = \"\", _duration = 6000) {\n  return toast(\n    t => (\n      <span\n        className=\"toast\"\n        role=\"button\"\n        tabIndex={0}\n        onClick={() => toast.dismiss(t.id)}\n        onKeyDown={() => toast.dismiss(t.id)}\n      >\n        {_msg}\n        <span style={{ float: \"right\", marginLeft: \"10px\" }}>✖</span>\n      </span>\n    ),\n    {\n      icon: _icon,\n      duration: _duration,\n    },\n  );\n}\n\n\nfunction getMainnetURI() {\n  const ALL_URIs = NodeHelper.getNodesUris();\n  const lodash_URIS = sample(ALL_URIs);\n  console.warn(lodash_URIS);\n\n  return lodash_URIS ? lodash_URIS : 'https://polygon-rpc.com/';\n}\n\nconst Web3Context = React.createContext(null);\n\nexport const useWeb3Context = () => {\n  const web3Context = useContext(Web3Context);\n  if (!web3Context) {\n    throw new Error(\n      \"useWeb3Context() can only be used inside of <Web3ContextProvider />, \" + \"please declare it at a higher level.\",\n    );\n  }\n  const { onChainProvider } = web3Context;\n  return useMemo(() => {\n    return { ...onChainProvider };\n  }, [web3Context]);\n};\n\nexport const useAddress = () => {\n  const { address } = useWeb3Context();\n  return address;\n};\n\nexport const Web3ContextProvider = ({ children }) => {\n  const [connected, setConnected] = useState(false);\n  const [chainID, setChainID] = useState(parseInt(process.env.REACT_APP_NETWORKID, 10));\n  const [address, setAddress] = useState(\"\");\n\n  const [provider, setProvider] = useState(new StaticJsonRpcProvider(process.env.REACT_APP_STATICRPC));\n  const [web3Modal, setWeb3Modal] = useState(\n    new Web3Modal({\n      network: \"mainnet\", // optional\n      cacheProvider: true, // optional\n      providerOptions: {\n        walletconnect: {\n          package: WalletConnectProvider, // required\n          options: {\n            rpc: {\n              137: getMainnetURI(),\n            },\n          }\n        },\n\n      },\n    })\n  );\n\n  const hasCachedProvider = () => {\n    if (!web3Modal) return false;\n    if (!web3Modal.cachedProvider) return false;\n    return true;\n  };\n\n  const _initListeners = useCallback(\n    rawProvider => {\n      if (!rawProvider.on) {\n        return;\n      }\n      rawProvider.on(\"accountsChanged\", async (accounts) => {\n        setTimeout(() => window.location.reload(), 1);\n      });\n\n      rawProvider.on(\"chainChanged\", async (chain) => {\n        _checkNetwork(chain);\n        console.warn(\"chainChanged to disconnecting\");\n        disconnect();\n\n        setTimeout(() => window.location.reload(), 1);\n      });\n\n      rawProvider.on(\"network\", (_newNetwork, oldNetwork) => {\n        if (!oldNetwork) return;\n        setTimeout(() => window.location.reload(), 1);\n      });\n    },\n    [provider],\n  );\n\n  const _checkNetwork = (otherChainID) => {\n    if (chainID !== otherChainID) {\n      if (otherChainID === parseInt(process.env.REACT_APP_NETWORKID, 10)) {\n        setChainID(otherChainID);\n        return true;\n      }\n      return false;\n    }\n    return true;\n  };\n\n  const connect = useCallback(async () => {\n    const rawProvider = await web3Modal.connect();\n    _initListeners(rawProvider);\n\n    const connectedProvider = new Web3Provider(rawProvider, \"any\");\n\n    const chainId = await connectedProvider.getNetwork().then(network => network.chainId);\n    const connectedAddress = await connectedProvider.getSigner().getAddress();\n    const validNetwork = _checkNetwork(chainId);\n    if (!validNetwork) {\n      makeToast(`Wrong network, please switch to Polygon MainNet = ${process.env.REACT_APP_NETWORKID}`, \"⚠️\", 6000);\n      return;\n    }\n    setAddress(connectedAddress);\n    setProvider(connectedProvider);\n\n    setConnected(true);\n\n    return connectedProvider;\n  }, [provider, web3Modal, connected]);\n\n  const disconnect = useCallback(async () => {\n    console.info(\"disconnecting\");\n\n    setAddress('');\n    web3Modal.clearCachedProvider();\n    setConnected(false);\n\n    setTimeout(() => window.location.reload(), 1);\n  }, [provider, web3Modal, connected]);\n\n  // useEffect(() => {\n  //   if (hasCachedProvider()) {\n  //     connect().then(() => {\n  //     });\n  //   } else {\n  //   }\n  // }, []);\n\n  const onChainProvider = useMemo(\n    () => ({ connect, disconnect, hasCachedProvider, provider, connected, address, chainID, web3Modal }),\n    [connect, disconnect, hasCachedProvider, provider, connected, address, chainID, web3Modal],\n  );\n\n  useEffect(() => {\n    // logs non-functioning nodes && returns an array of working mainnet nodes, could be used to optimize connection\n    // NodeHelper.checkAllNodesStatus();\n    const asyncNode = async () => {\n      await NodeHelper.checkAllNodesStatus()\n    }\n    asyncNode()\n    if (hasCachedProvider()) { connect().then()}\n    \n    }, []);\n\n  return <Web3Context.Provider value={{ onChainProvider }}>{children}</Web3Context.Provider>;\n};\n\n\n\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPeaceSign(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 250 250\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"aliceblue\",\n    stroke: \"#000\",\n    strokeWidth: 21\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 125,\n    cy: 125,\n    r: 106\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M125,19 v212 M125,125 l-75,75 M125,125 l75,75\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPeaceSign);\nexport default __webpack_public_path__ + \"static/media/Peace_sign.847a1972.svg\";\nexport { ForwardRef as ReactComponent };","import { BigNumber, BigNumberish, ethers } from \"ethers\";\r\nimport { setAll, stringTrim } from \"../utils/index\";\r\nimport { createSlice, createSelector, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { IBaseAsyncThunk } from \"./interfaces\";\r\nimport { addresses } from \"../constants\";\r\nimport { abi as idoABI } from \"../config/abi/ido.json\";\r\nimport { abi as diceABI } from \"../config/abi/dice.json\";\r\n\r\ninterface IAppData {\r\n  readonly minAmount: string;\r\n  readonly maxAmount: string;\r\n  readonly salePrice: string;\r\n  readonly startTimestamp: string;\r\n  readonly endTimestamp: string;\r\n  readonly FullReleaseTimestamp: string;\r\n  readonly toTalAmount: string;\r\n  readonly sellAmount: string;\r\n  readonly IdoMaticBalance: string;\r\n  readonly isTimeEnd: boolean;\r\n  readonly Leap_Of_Faith: number;\r\n\r\n  readonly sharesDiceAll: string;\r\n  readonly FullRelease: string;\r\n  readonly ProfitRelease: string;\r\n  readonly incomeProfit: string;\r\n  readonly outcomeProfit: string;\r\n  readonly Exodus: string;\r\n  readonly SatanDevil: number;\r\n}\r\n\r\nexport const loadAppDetails = createAsyncThunk(\r\n  \"app/loadAppDetails\",\r\n  async ({ networkID, provider }: IBaseAsyncThunk) => {\r\n    const IdoContract = new ethers.Contract(addresses[networkID].Ido_ADDRESS, idoABI, provider)\r\n\r\n    const minAmount = stringTrim(ethers.utils.formatUnits(await IdoContract.minAmount(),\"ether\"),2)\r\n    const maxAmount = stringTrim(ethers.utils.formatUnits(await IdoContract.maxAmount(),\"ether\"),2)\r\n    const salePrice = stringTrim(ethers.utils.formatUnits(await IdoContract.salePrice(),\"ether\"),2)  \r\n    const startTimestamp = String( await IdoContract.startTimestamp() )\r\n    const endTimestamp = String( await IdoContract.endTimestamp() ) \r\n    const FullReleaseTimestamp = String( await IdoContract.getFullReleaseTimestamp() ) \r\n    const toTalAmount = stringTrim(ethers.utils.formatUnits( await IdoContract.toTalAmount(),\"ether\"),2) \r\n    const sellAmount = stringTrim(ethers.utils.formatUnits( await IdoContract.sellAmount(),\"ether\"),2) \r\n    const IdoMaticBalance = stringTrim(ethers.utils.formatUnits( \r\n      await IdoContract.balanceAddress(addresses[networkID].Ido_ADDRESS),\"ether\"),2) \r\n    const isTimeEnd =   await IdoContract.isTimeEnd()\r\n    const Leap_Of_Faith =   Number(await IdoContract.Leap_Of_Faith())\r\n\r\n\r\n    const diceContract = new ethers.Contract(addresses[networkID].Dice_ADDRESS, diceABI, provider)\r\n\r\n    const sharesDiceAll = stringTrim(ethers.utils.formatUnits( await diceContract.sharesDiceAll(),\"ether\"),2) \r\n    const FullRelease = stringTrim(ethers.utils.formatUnits( await diceContract.FullRelease(),\"ether\"),2) \r\n    const ProfitRelease = stringTrim(ethers.utils.formatUnits( await diceContract.ProfitRelease(),\"ether\"),2) \r\n    const incomeProfit = stringTrim(ethers.utils.formatUnits( await diceContract.incomeProfit(),\"ether\"),2) \r\n    const outcomeProfit = stringTrim(ethers.utils.formatUnits( await diceContract.outcomeProfit(),\"ether\"),2)\r\n    const Exodus = stringTrim(ethers.utils.formatUnits( await diceContract.Exodus(),\"ether\"),2)\r\n    const SatanDevil = Number(await diceContract.SatanDevil()) \r\n    \r\n\r\n    return {\r\n      minAmount,\r\n      maxAmount,\r\n      salePrice,\r\n      startTimestamp,\r\n      endTimestamp,\r\n      FullReleaseTimestamp,\r\n      toTalAmount,\r\n      sellAmount,\r\n      IdoMaticBalance,\r\n      isTimeEnd,\r\n      Leap_Of_Faith,\r\n\r\n      sharesDiceAll,\r\n      FullRelease,\r\n      ProfitRelease,\r\n      incomeProfit,\r\n      outcomeProfit,\r\n      Exodus,\r\n      SatanDevil,\r\n    } as IAppData;\r\n  },\r\n);\r\n\r\ninterface IAppSlice {\r\n  loading: boolean;\r\n  appDetails: { [Key: string]: IAppData };\r\n}\r\n\r\nconst initialState: IAppSlice = {\r\n  loading: true,//false,\r\n  appDetails: {},\r\n};\r\n\r\nconst appSlice = createSlice({\r\n  name: \"app\",\r\n  initialState,\r\n  reducers: {\r\n    fetchAppSuccess(state, action) {\r\n      setAll(state, action.payload);\r\n    },\r\n  },\r\n  extraReducers: builder => {\r\n    builder\r\n      .addCase(loadAppDetails.pending, state => {\r\n        // state.loading = true;\r\n      })\r\n      .addCase(loadAppDetails.fulfilled, (state, action) => {\r\n        \r\n        setAll(state.appDetails, action.payload);\r\n        state.loading = false;\r\n      })\r\n      .addCase(loadAppDetails.rejected, (state, { error }) => {\r\n        console.warn(error);\r\n        state.loading = false;\r\n      })\r\n\r\n  },\r\n});\r\n\r\n\r\nexport default appSlice.reducer;\r\n\r\nexport const { fetchAppSuccess } = appSlice.actions;\r\n\r\n","import { BigNumber, BigNumberish, ethers } from \"ethers\";\r\nimport { setAll, stringTrim } from \"../utils/index\";\r\nimport { createSlice, createSelector, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../store\";\r\nimport { IBaseAddressAsyncThunk, IBaseAsyncThunk } from \"./interfaces\";\r\nimport { addresses } from \"../constants\";\r\nimport { abi as ierc20 } from \"../config/abi/ierc20.json\";\r\nimport { abi as idoABI } from \"../config/abi/ido.json\";\r\nimport { abi as diceABI } from \"../config/abi/dice.json\";\r\n\r\n\r\nexport interface IUserAccountDetails {\r\n\r\n    userMaticBalance: string,\r\n    userACreedBalance: string,\r\n    approveACreed_to_Dice: string,\r\n    boughtACreed: boolean,\r\n    whiteListed: boolean,\r\n    userSharesDice: string,\r\n}\r\n\r\nexport const loadAccountDetails = createAsyncThunk(\r\n  \"account/loadAccountDetails\",\r\n  async ({ networkID, provider, address }: IBaseAddressAsyncThunk) => {    \r\n\r\n    const IdoContract = new ethers.Contract(addresses[networkID].Ido_ADDRESS, idoABI, provider)\r\n\r\n    const userMaticBalance = stringTrim(ethers.utils.formatUnits( await IdoContract.balanceAddress(address) ,\"ether\"),2)\r\n    const boughtACreed = await IdoContract.boughtACreed(address)\r\n    const whiteListed = await IdoContract.whiteListed(address)\r\n\r\n    const aCreesContract = new ethers.Contract(addresses[networkID].ACreed_ADDRESS, ierc20, provider)\r\n    const userACreedBalance = stringTrim(ethers.utils.formatUnits( await aCreesContract.balanceOf(address) ,\"ether\"),2)\r\n    const approveACreed_to_Dice = stringTrim(ethers.utils.formatUnits( \r\n      await aCreesContract.allowance(address, addresses[networkID].Dice_ADDRESS) ,\"ether\"),2)\r\n\r\n    const diceContract = new ethers.Contract(addresses[networkID].Dice_ADDRESS, diceABI, provider)\r\n    const userSharesDice = stringTrim(ethers.utils.formatUnits( await diceContract.sharesDice(address) ,\"ether\"),2)\r\n\r\n    return {\r\n\r\n        userMaticBalance,\r\n        userACreedBalance,\r\n        approveACreed_to_Dice,\r\n        boughtACreed,\r\n        whiteListed,\r\n        userSharesDice,\r\n    } as IUserAccountDetails\r\n  },\r\n);\r\n\r\n\r\n\r\n\r\ninterface IAccountSlice {\r\n  loading: boolean;\r\n  accountDetails: { [Key: string]: IUserAccountDetails };\r\n}\r\n\r\nconst initialState: IAccountSlice = { \r\n  loading: true, \r\n  accountDetails: {},\r\n};\r\n\r\n\r\nconst accountSlice = createSlice({\r\n  name: \"account\",\r\n  initialState,\r\n  reducers: {\r\n    fetchAccountSuccess(state, action) {\r\n      setAll(state, action.payload);\r\n    },\r\n  },\r\n  extraReducers: builder => {\r\n    builder\r\n      .addCase(loadAccountDetails.pending, state => {\r\n        // state.loading = true;\r\n      })\r\n      .addCase(loadAccountDetails.fulfilled, (state, action) => {\r\n        setAll(state.accountDetails, action.payload);\r\n        state.loading = false;\r\n      })\r\n      .addCase(loadAccountDetails.rejected, (state, { error }) => {\r\n        console.warn(error);\r\n        state.loading = false;\r\n      })\r\n\r\n  },\r\n});\r\n\r\nexport default accountSlice.reducer;\r\n\r\nexport const { fetchAccountSuccess } = accountSlice.actions;\r\n\r\n// const baseInfo = (state: RootState) => state.account;\r\n\r\n// export const getAccountState = createSelector(baseInfo, account => account);\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface IPendingTxn {\n  readonly txnHash: string;\n  readonly text: string;\n  readonly type: string;\n}\n\nconst initialState: Array<IPendingTxn> = [];\n\nconst pendingTxnsSlice = createSlice({\n  name: \"pendingTransactions\",\n  initialState,\n  reducers: {\n    fetchPendingTxns(state, action: PayloadAction<IPendingTxn>) {\n      state.push(action.payload);\n    },\n    clearPendingTxn(state, action: PayloadAction<string>) {\n      const target = state.find(x => x.txnHash === action.payload);\n      if (target) {\n        state.splice(state.indexOf(target), 1);\n      }\n    },\n  },\n});\n\nexport const isPendingTxn = (pendingTransactions: IPendingTxn[], type: string) => {\n  return pendingTransactions.map(x => x.type).includes(type);\n};\n\nexport const txnButtonText = (pendingTransactions: IPendingTxn[], type: string, defaultText: string) => {\n  return isPendingTxn(pendingTransactions, type) ? \"Pending...\" : defaultText;\n};\n\n// export const txnButtonTextGeneralPending = (pendingTransactions: IPendingTxn[], type: string, defaultText: string) => {\n//   return pendingTransactions.length >= 1 ? \"Pending...\" : defaultText;\n// };\n\nexport const { fetchPendingTxns, clearPendingTxn } = pendingTxnsSlice.actions;\n\nexport default pendingTxnsSlice.reducer;\n","import BigNumber from 'bignumber.js';\nimport axios from \"axios\";\n\nexport function setAll(state, properties) {\n    const props = Object.keys(properties);\n    props.forEach(key => {\n      state[key] = properties[key];\n    });\n}\n\nexport async function get_Polygon_Main_PriorityFee() { \n    let resp;\n    let result;\n    try {\n     resp = await axios.get(`https://gpoly.blockscan.com/gasapi.ashx?apikey=key&method=gasoracle`);\n     result = resp.data['result'];\n    } catch (error) {\n      console.warn({error});\n      result = {\"SafeGasPrice\":\"60\",\"ProposeGasPrice\":\"120\",\"FastGasPrice\":\"180\"};\n    }\n\n    return result;  \n  } \n\n  export const numberStrToBigNumber = (val, decimals) => {\n    const x = new BigNumber(val).multipliedBy(new BigNumber(10).pow(decimals));\n    return x.toFixed(0);\n  }\n\n/**\n * returns unix timestamp for x minutes ago\n * param x minutes as a number\n */\n export const minutesAgo = (x) => {\n    const now = new Date().getTime();\n    return new Date(now - x * 60000).getTime();\n  };\n\nexport const trim = (number = 0, precision = 0) => {\n    const array = number.toString().split(\".\");\n    if (array.length === 1) return number.toString();\n    if (precision === 0) return array[0].toString();\n\n    const poppedNumber = array.pop() || \"0\";\n    array.push(poppedNumber.substring(0, precision));\n    const trimmedNumber = array.join(\".\");\n    return trimmedNumber;\n}\n\nexport function stringTrim(str , precision = 0) {\n    // why would number ever be undefined??? what are we trimming?\n    const array = str.split(\".\");\n    if (array.length === 1) return str;\n    if (precision === 0) return array[0].toString();\n  \n    const poppedNumber = array.pop() || \"0\";\n    array.push(poppedNumber.substring(0, precision));\n    const trimmedNumber = array.join(\".\");\n    return trimmedNumber;\n}\n\nexport const shorten = (str) => {\n    if (str.length < 10) return str;\n    return `${str.slice(0, 6)}...${str.slice(str.length - 4)}`;\n}\nexport function shorten2(str) {\n    return `${str.slice(0, 10)}...${str.slice(str.length - 6)}`;\n}\nexport const formatNum = (val) => {\n    return val.replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, \"$1,\")\n}\nexport const formatCurrency = (c, precision = 0) => {\n    return new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        maximumFractionDigits: precision,\n        minimumFractionDigits: precision,\n    }).format(c);\n}\n\nexport const unique = (arr, u_key) => {\n    let map = new Map()\n    arr.forEach((item, index) => {\n        if (!map.has(item[u_key])) {\n            map.set(item[u_key], item)\n        }\n    })\n    return [...map.values()]\n}\n\nexport const numberToHex = (val, decimals) => {\n    var num_str = BigNumber(val).multipliedBy(BigNumber(10).pow(decimals));\n    var x = new BigNumber(num_str);\n    return x.toFixed(0);\n}\n\n\nexport const addTokenToWallet = async (tokenAddress, symbol, decimals, image) => {\n    if (window.ethereum) {\n        try {\n            await window.ethereum.request({\n                method: \"wallet_watchAsset\",\n                params: {\n                    type: \"ERC20\",\n                    options: {\n                        address: tokenAddress,\n                        symbol: symbol,\n                        decimals: decimals,\n                        image: image,\n                    },\n                },\n            });\n        } catch (e) {\n            console.info({e});\n        }\n    }\n};\n\nexport const calTime = (seconds) => {\n    if (seconds !== 0 && !seconds) {\n        return \"\";\n    }\n    const d = Math.floor(seconds / (3600 * 24));\n    const h = Math.floor((seconds % (3600 * 24)) / 3600);\n    const m = Math.floor((seconds % 3600) / 60);\n    const s = Math.floor((seconds - 24 * 3600 * d - h * 3600 - m * 60));\n    const dDisplay = d > 0 ? (d >= 10 ? d : \"0\" + d) : \"00\";\n    const hDisplay = h > 0 ? (h >= 10 ? h : \"0\" + h) : \"00\";\n    const mDisplay = m > 0 ? (m >= 10 ? m : \"0\" + m) : \"00\";\n    const sDisplay = s > 0 ? (s >= 10 ? s : \"0\" + s) : \"00\";\n    let result = { day: dDisplay, hour: hDisplay, minutes: mDisplay, seconds: sDisplay };\n    return result;\n}\n\n\n","import { Box, Avatar } from \"@material-ui/core\";\r\nimport { Link, Typography } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { ReactComponent as LogoIcon } from \"../../assets/images/Peace_sign.svg\";\r\n\r\nexport default function NotFound() {\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\"\r\n      sx={{ zIndex: (theme) => theme.zIndex.drawer + 10, width: \"100vw\", height: \"100vh\", backgroundColor: \"#1a3849\" }}\r\n    >\r\n      <Avatar\r\n        component={LogoIcon}\r\n        style={{ width: \"10rem\", height: \"10rem\", }}\r\n        className=\"\"\r\n      />\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" sx={{ margin: \"2rem\" }}>\r\n        <Typography >{t(\"PageNotFound\")}🛸</Typography>\r\n        <Link\r\n          component={NavLink}\r\n          to=\"/\"\r\n          underline=\"always\"\r\n          color=\"#fff\"\r\n          className=\"baseChart\"\r\n        >\r\n          Dao2Utopia.com\r\n        </Link>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import queryString from \"query-string\";\r\n\r\nconst sessionStorageKey = \"query\";\r\n\r\n/**\r\n * Stores the URL query parameters in session storage as a string.\r\n *\r\n * If the query parameters cannot be retrieved or parsed,\r\n * the session storage will be cleared.\r\n */\r\nexport function storeQueryParameters() {\r\n  // We use session storage as it will be cleared when the tab is closed. The data is not needed any longer than that.\r\n  if (!window.sessionStorage) {\r\n    console.warn(\"Could not find session storage.\");\r\n    return;\r\n  }\r\n\r\n  // window.location.search is supposed to be what contains the query parameters\r\n  // however it was not returning anything\r\n  // so we use href instead: \r\n  if (!window.location || !window.location.href) {\r\n    console.warn(\"Unable to access window.location\");\r\n    window.sessionStorage.removeItem(sessionStorageKey);\r\n    return;\r\n  }\r\n\r\n  // If we can't fetch the parameters, it's possible that:\r\n  // 1. There were no parameters to begin with\r\n  // 2. There were parameters, but a link was clicked and there parameters are no longer present\r\n  //\r\n  // Either way, we would have already captured any parameters that were present upon initial page load, and they have been saved.\r\n  var hrefParameters = window.location.href.split(\"?\");\r\n  if (!hrefParameters || hrefParameters.length != 2) {\r\n    return;\r\n  }\r\n\r\n  var parsedParameters = queryString.parse(hrefParameters.pop() || \"\");\r\n\r\n  window.sessionStorage.setItem(sessionStorageKey, queryString.stringify(parsedParameters));\r\n  console.debug(\"Stored query parameters in session storage: \" + queryString.stringify(parsedParameters));\r\n}\r\n\r\n/**\r\n * Fetches the query parameters from session storage\r\n *\r\n * @returns dictionary containing the query parameters\r\n */\r\nexport function retrieveQueryParameters() {\r\n  if (!window.sessionStorage) {\r\n    console.warn(\"Could not find session storage.\");\r\n    return {};\r\n  }\r\n\r\n  var parsedParameters: queryString.ParsedQuery = queryString.parse(\r\n    window.sessionStorage.getItem(sessionStorageKey) || \"\",\r\n  );\r\n  console.debug(\"Retrieved query parameters from session storage: \" + JSON.stringify(parsedParameters));\r\n\r\n  return parsedParameters;\r\n}\r\n\r\nexport function retrieveUTMQueryParameters() {\r\n  var queryParameters: queryString.ParsedQuery = retrieveQueryParameters();\r\n\r\n  // Return only parameters with a \"utm_\" prefix\r\n  var filteredQueryParameters: queryString.ParsedQuery = {};\r\n  for (let key in queryParameters) {\r\n    if (key.indexOf(\"utm_\") == -1) continue;\r\n\r\n    filteredQueryParameters[key] = queryParameters[key];\r\n  }\r\n\r\n  console.debug(\"Filtered query parameters for UTM prefix: \" + JSON.stringify(filteredQueryParameters));\r\n  return filteredQueryParameters;\r\n}\r\n","import { Box, Avatar } from \"@material-ui/core\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ReactComponent as LogoIcon } from \"../../assets/images/Peace_sign.svg\";\r\nimport \"./loading.scss\";\r\n\r\nfunction LoadingSplash() {\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n\r\n    <Box  display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\"\r\n    sx={{zIndex: (theme) => theme.zIndex.drawer + 10, width:\"100vw\", height:\"100vh\", backgroundColor:\"#1a3849\"}} \r\n    // sx={{ width:\"100vw\", height:\"100vh\", backgroundColor:\"#1a3849\"}} \r\n      >\r\n\r\n          <Avatar\r\n           component={LogoIcon}\r\n           style={{width:\"10rem\", height:\"10rem\",}}\r\n           className=\"loading-icon pulse\"\r\n         /> \r\n         <Typography sx={{margin:\"2rem\"}}>{t(\"Creed\")}</Typography>\r\n\r\n    </Box>\r\n\r\n  )\r\n}\r\n\r\nexport default LoadingSplash;\r\n","import { Route, Redirect, Switch } from \"react-router-dom\";\nimport { Suspense, lazy, useEffect, useState, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Backdrop, Box, CssBaseline } from \"@mui/material\";\n\nimport NotFound from \"./views/404/NotFound\";\nimport { useAddress, useWeb3Context } from \"./hooks/web3Context\";\nimport { storeQueryParameters } from \"./utils/QueryParameterHelper\";\nimport { loadAppDetails } from \"./slices/AppSlice\";\nimport { loadAccountDetails } from \"./slices/AccountSlice\";\nimport LoadingSplash from \"./components/Loading/LoadingSplash\";\nconst Home = lazy(() => import(\"./views/home\"));\nconst Ido = lazy(() => import(\"./views/ido\"));\n\nfunction App() {\n  const dispatch = useDispatch();\n  const { connect, hasCachedProvider, provider, chainID, connected } = useWeb3Context();\n  const address = useAddress();\n\n  const [walletChecked, setWalletChecked] = useState(false);\n  const [isLoad, setIsLoad] = useState(false);\n\n  const loadApp = useCallback(\n    loadProvider => {\n      dispatch(loadAppDetails({ networkID: chainID, provider: loadProvider }));\n      setIsLoad(true);\n    },\n    [connected],\n  );\n\n  const loadAccount = useCallback(\n    loadProvider => {\n      dispatch(loadAccountDetails({ networkID: chainID, provider: loadProvider, address }));\n    },\n    [connected],\n  );\n\n  async function loadDetails(whichDetails) {\n    let loadProvider = provider;\n    if (whichDetails === \"app\") {\n      loadApp(loadProvider);\n    }\n    // don't run unless provider is a Wallet...\n    if (whichDetails === \"account\" && address && connected && isLoad) {\n      loadAccount(loadProvider);\n    }\n  }\n\n  // this useEffect fires on state change from above. It will ALWAYS fire AFTER\n  useEffect(() => {\n    // don't load ANY details until wallet is Checked\n    if (walletChecked) {\n      loadDetails(\"app\");\n    }\n  }, [walletChecked]);\n\n  // this useEffect picks up any time a user Connects via the button\n  useEffect(() => {\n    // don't load ANY details until wallet is Connected\n    if (connected && isLoad) {\n      loadDetails(\"account\");\n    }\n  }, [connected, isLoad]);\n\n\n  const safeConnectMetaMask = async () => {\n    try {\n      await ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: '0x89' }],\n      });\n    } catch (switchError) {\n      // This error code indicates that the chain has not been added to MetaMask.\n      if (switchError.code === 4902) {\n        try {\n          await ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [\n              {\n                chainId: '0x89',\n                chainName: 'Polygon MainNet',\n                nativeCurrency: {\n                  name: 'Matic',\n                  symbol: 'Matic',\n                  decimals: 18,\n                },\n                rpcUrls: ['https://polygon-rpc.com/'],\n                blockExplorerUrls: ['https://polygonscan.com/'],\n                iconUrls: ['https://github.com/maticnetwork/polygon-token-assets/blob/main/icons/matic.svg']\n              },\n            ],\n          });\n        } catch (addError) {\n          // handle \"add\" error\n          console.warn(addError);\n        }\n      }\n      // handle other \"switch\" errors\n      console.warn(switchError);\n\n    } finally { \n      connect().then(() => {\n        setWalletChecked(true);\n      });\n    }\n    \n  }\n\n  useEffect(() => {\n    if (hasCachedProvider()) {\n      // then user DOES have a wallet\n      // connect().then(() => {\n      //   setWalletChecked(true);\n      // });\n\n      connected ? null : safeConnectMetaMask()\n    } else {\n      // then user DOES NOT have a wallet\n      setWalletChecked(true);\n    }\n\n    // We want to ensure that we are storing the UTM parameters for later, even if the user follows links\n    storeQueryParameters();\n  }, []);\n\n  return (\n    <Box className=\"App flex-align-items-center\">\n      <CssBaseline />\n\n      <Suspense\n        fallback={\n          <Backdrop\n            open={true}\n            sx={{ zIndex: 999, backdropFilter: \"blur(33px)\" }} \n          >\n            <LoadingSplash />\n          </Backdrop>\n        }\n      >\n        <Switch>\n\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n\n          <Route exact path=\"/ido\">\n            <Ido />\n          </Route>\n\n          <Route component={NotFound} />\n        </Switch>\n      </Suspense>\n\n    </Box>\n  );\n}\n\nexport default App;\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\n// import Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport en from './i18n/en.json'\nimport zh from './i18n/zh.json'\nimport ru from './i18n/ru.json'\nimport fr from './i18n/fr.json'\n\n\nconst localLanguage = localStorage.getItem(\"i18nextLng\");\n\nconst resources = {\n    en: { translation: en },\n    zh: { translation: zh },\n    ru: { translation: ru },\n    fr: { translation: fr }\n};\n\ni18n//.use(Backend)\n\t// detect user language\n\t// learn more: https://github.com/i18next/i18next-browser-languageDetector\n\t.use(LanguageDetector)\n\t// pass the i18n instance to react-i18next.\n\t.use(initReactI18next)\n    .init({\n        debug: false,\n        supportedLngs: ['en', 'zh', 'fr', 'ru'],\n        lng: localLanguage == \"zh\" ? \"zh\" : localLanguage == \"fr\" ? \"fr\" : localLanguage == \"ru\" ? \"ru\" : \"en\",\n        fallbackLng: \"en\",\n        resources,\n        keySeparator: false, // we do not use keys in form messages.welcome\n        interpolation: {\n            escapeValue: false // react already safes from xss\n        }\n    });\n\nexport default i18n;","import { configureStore } from '@reduxjs/toolkit'\nimport pendingTransactionsReducer from \"./slices/PendingTxnsSlice\";\nimport appReducer from \"./slices/AppSlice\";\nimport accountReducer from \"./slices/AccountSlice\";\n\nconst store = configureStore({\n    reducer: {\n        pendingTransactions: pendingTransactionsReducer,\n        app: appReducer,\n        account: accountReducer,\n    },\n})\n\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\nexport default store;","/* eslint-disable global-require */\nimport { Component } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Web3ContextProvider } from \"./hooks/web3Context\";\n\nimport App from \"./App\";\nimport './i18n';\nimport store from './store.ts'\nimport { Provider } from 'react-redux'\nexport default class Root extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Web3ContextProvider>\n                <Provider store={store}>\n                    <BrowserRouter basename={\"/#\"}>\n                        <App />\n                    </BrowserRouter>\n                </Provider>\n            </Web3ContextProvider>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './Root';\nimport './index.css'\nReactDOM.render(\n  <>\n    <Root />\n  </>,\n  document.getElementById('root')\n);\n\n","// NOTE could get this from an outside source since it changes slightly over time\r\nexport const BLOCK_RATE_SECONDS = 3;\r\n\r\nexport const TOKEN_DECIMALS = 18;\r\n\r\n\r\ninterface IAddresses {\r\n  [key: number]: { [key: string]: string };\r\n}\r\n\r\nexport const addresses: IAddresses = {\r\n\r\n  137: { \r\n    Ido_ADDRESS: \"0x865C5C2fbfd82a48101Ec91a98ecBC8B1c3e34D0\",  \r\n    ACreed_ADDRESS: \"0x7BA8f01fbf928Ad29D7C46F36Bb9FE2CBcaf37c4\",\r\n    Dice_ADDRESS: \"0xeeE3D864C7EdEbDA7016032282cBCC1B654F86fe\",\r\n  },\r\n\r\n  \r\n};\r\n\r\n\r\n\r\n"],"sourceRoot":""}